{"version":3,"sources":["components/PhotoCard/PhotoCard.module.css","components/App.module.css","components/Gallery/Gallery.module.css","components/Modal/Modal.module.css","components/SearchForm/SearchForm.module.css","components/SearchForm/SearchForm.jsx","components/Modal/Modal.jsx","components/PhotoCard/PhotoCard.jsx","components/Gallery/Gallery.jsx","services/photo-api.jsx","components/App.jsx","index.jsx"],"names":["module","exports","SearchForm","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","className","style","searchForm","onSubmit","this","type","autoComplete","placeholder","onChange","Component","Modal","backdropRef","createRef","MODAL_ROOT","document","querySelector","handleKeyPress","code","onClose","handleBackdropClick","current","window","addEventListener","removeEventListener","imageURL","createPortal","backdrop","ref","onClick","role","modal","src","alt","PhotoCard","isModalOpen","openModal","closeModal","photo","webformatURL","largeImageURL","likes","views","comments","downloads","photoCard","stats","statsItem","fullscreenButton","Gallery","photos","gallery","map","galleryItem","key","id","fetchPhotos","pageNumber","fetch","then","res","json","data","hits","App","error","photoAPI","catch","finally","scrollTo","top","body","scrollHeight","behavior","prevProps","prevState","app","length","onOpen","button","ReactDOM","render"],"mappings":"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","file":"static/js/main.01ebf016.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoCard\":\"PhotoCard_photoCard__1_jqy\",\"fullscreenButton\":\"PhotoCard_fullscreenButton__30lS4\",\"stats\":\"PhotoCard_stats__2_wuk\",\"statsItem\":\"PhotoCard_statsItem__1Wpqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__ypAkp\",\"button\":\"App_button__1fhYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"Gallery_gallery__w5wut\",\"galleryItem\":\"Gallery_galleryItem__29vRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__24AUK\",\"modal\":\"Modal_modal__1O94h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__3HTnQ\"};","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport style from './SearchForm.module.css';\n\nclass SearchForm extends Component {\n    static propTypes = {\n        onSearch: T.func.isRequired,\n    };\n\n    state = { query: ''};\n\n    handleChange = e => {\n        this.setState({ query: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSearch(this.state.query);\n        this.setState({ query: '' });\n      };\n\n  render() {\n    return (\n      <form className={style.searchForm} onSubmit={this.handleSubmit}>\n        <input \n        type=\"text\" \n        autoComplete=\"off\" \n        placeholder=\"Search images...\" \n        onChange={this.handleChange} />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component, createRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport T from 'prop-types';\nimport {backdrop, modal} from './Modal.module.css';\n\nexport default class Modal extends Component {\n    static propTypes = {\n        onClose: T.func.isRequired,\n        imageURL: T.string.isRequired,\n        query: T.string.isRequired,\n    };\n\n  backdropRef = createRef();\n  MODAL_ROOT = document.querySelector('#modal-root');\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    this.props.onClose();\n  };\n\n  handleBackdropClick = e => {\n    if (this.backdropRef.current && e.target !== this.backdropRef.current) return;\n    this.props.onClose();\n  };\n\n  render() {\n      const {imageURL, query} = this.props;\n    return createPortal(\n      <div\n        className={backdrop}\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n        role=\"presentation\"\n      >\n        <div className={modal}>\n            <img src={imageURL} alt={query} />\n        </div>\n      </div>,\n      this.MODAL_ROOT,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport { photoCard, stats, statsItem, fullscreenButton } from './PhotoCard.module.css';\nimport Modal from '../Modal/Modal';\n\nclass PhotoCard extends Component {\n    static propTypes = {\n        photo: T.object.isRequired,\n        query: T.string.isRequired,\n    };\n\n    state = { isModalOpen: false };\n    \n    openModal = () => this.setState({ isModalOpen: true });\n    \n    closeModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n      const {photo:{ webformatURL, largeImageURL, likes, views, comments, downloads }, query} = this.props;\n    return (\n      <div className={photoCard}>\n        <img src={webformatURL} alt={query} />\n\n        <div className={stats}>\n          <p className={statsItem}>\n            <i className=\"material-icons\">thumb_up</i>\n            {likes}\n          </p>\n          <p className={statsItem}>\n            <i className=\"material-icons\">visibility</i>\n            {views}\n          </p>\n          <p className={statsItem}>\n            <i className=\"material-icons\">comment</i>\n            {comments}\n          </p>\n          <p className={statsItem}>\n            <i className=\"material-icons\">cloud_download</i>\n            {downloads}\n          </p>\n        </div>\n\n        <button type=\"button\" className={fullscreenButton} onClick={this.openModal}>\n          <i className=\"material-icons\">zoom_out_map</i>\n        </button>\n        {this.state.isModalOpen && <Modal onClose={this.closeModal} imageURL={largeImageURL} query={query}></Modal>}\n      </div>\n    );\n  }\n}\n\nexport default PhotoCard;\n","import React from 'react';\nimport T from 'prop-types';\nimport {gallery, galleryItem} from './Gallery.module.css';\nimport PhotoCard from '../PhotoCard/PhotoCard';\n\nconst Gallery = ({photos, query}) => (\n    <ul className={gallery}>\n          {photos\n            .map(photo => (\n            <li className={galleryItem} key={photo.id}>\n                <PhotoCard photo={photo} query={query} />\n            </li>\n            ))}\n      </ul>\n);\n\nGallery.propTypes = {\n    photos: T.array.isRequired,\n    query: T.string.isRequired,\n  }\n\nexport default Gallery;\n","export const fetchPhotos = (query = '', pageNumber = 1) => {\n    return fetch(\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${pageNumber}&per_page=12&key=14069784-264cd694fe843795bae74c565`,\n    )\n      .then(res => res.json())\n      .then(data => data.hits);\n  };","import React, { Component } from 'react';\r\nimport {app, button} from './App.module.css';\r\nimport SearchForm from './SearchForm/SearchForm';\r\nimport Gallery from './Gallery/Gallery';\r\nimport * as photoAPI from '../services/photo-api';\r\n\r\nclass App extends Component {\r\n  state={\r\n    photos: [],\r\n    error: null,\r\n    pageNumber: 1,\r\n    query: '',\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.query !== this.state.query) {\r\n      this.fetchPhotos();\r\n    }\r\n  }\r\n\r\n  onSearch = query => {\r\n    this.setState({ query, photos: [], pageNumber: 1 });\r\n  };\r\n\r\n  fetchPhotos = () => {\r\n    const { query, pageNumber } = this.state;\r\n\r\n    photoAPI\r\n      .fetchPhotos(query, pageNumber)\r\n      .then(photos => {\r\n        this.setState(state => ({\r\n          photos: [...this.state.photos, ...photos.map(({id, webformatURL, largeImageURL, likes, views, comments, downloads}) => {\r\n            return {id, webformatURL, largeImageURL, likes, views, comments, downloads}\r\n          })],\r\n          pageNumber: state.pageNumber + 1,\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      })\r\n      .finally(()=>{\r\n        window.scrollTo({\r\n          top: document.body.scrollHeight,\r\n          behavior: \"smooth\"\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { photos, error, query } = this.state;\r\n    return (\r\n      <div className={app}>\r\n        <SearchForm onSearch={this.onSearch}/>\r\n        {error && <div>Error:{error}</div>}\r\n        {photos.length > 0 && <Gallery photos={photos} query={query} onOpen={this.openModal}/>}\r\n        {photos.length > 0 && <button className={button} type=\"button\" onClick={this.fetchPhotos}>Load more articles</button> }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}